\documentclass PIScriptDoc

\script PhotometricMosaic

\keywords {
   mosaic
}

\author {
   John Murphy
}

\copyright {
   2019-2020 John Murphy
}

\brief {
   A script for creating mosaics from previously registered images. The stars in the overlapping region are used to calculate the required target image scale factor. The offset gradient between the two images is then calculated to match the two frames.
}

\description {
  \subsection { Design Goals } {
    \definition {
      { Accurate Scale Factor }{
        To match the target frame to the reference, it is necessary to multiply it by a scale factor and then subtract a background offset. These two parameters are related, so if there is an error in the calculated scale factor, this error will affect the calculated offset. Typically, for the average background pixel value, these two errors will appear to cancel, and the join may look OK. However, this leads to two problems:
        \list {
          {At higher pixel values, the errors will be apparent.}
          {An incorrect scale will result in a difference in contrast between the reference and target image. The effects of this are widespread. For example, it can make the background look more noisy than it really is. Or it can make a dense star field (e.g. Milky Way region) look more sparse in one frame. }
        }
        Unfortunately accurately determining the scale factor is tricky. For example, if one of the images was taken under poor seeing conditions, the stars in one frame may be spread over more pixels (larger Full Width at Half Maximum). Their peak values are lower than they should be. This may confuse a pixel by pixel comparison between the two images.

        This script solves this problem by applying photometry to the stars in the overlapping region. The scale is then determined from a least squares fit line through the photometry data. For this to work, there needs to be at least one unsaturated star in the overlapping region. The scale is calculated separately for each color channel, so the target frame's color balance will automatically be adjusted to match the reference frame.
      }

      { Background Offset }{
        The overlapping region is divided up into a grid of samples. If a sample is too close to a bright star, or it contains one or more black pixels, the sample is rejected. The background offset is then calculated from the median pixel value within each sample.

        This strategy is used to for the following reasons:
        \list {
          {Bright stars are more effected by scale errors. Rejecting samples close to bright stars makes the calculated offset more robust. }
          {Calculating the offset from samples is more robust against small alignment errors and stars with differing FWHM. }
        }
      }
      { Ad Hoc Mosaics }{
        This script is designed for planned mosaics where the images form a regular grid. For ad hoc mosaics, it will be necessary to use the 'Mosaic -> SplitMosaicTile' script to create a regular grid from the ad hoc frames. Creating extra joins sounds counter productive, but because the data on both sides of these new joins will be identical, they will be seamlessly joined in the final mosaic.
      }
      { Horizontal and Vertical Gradients }{
        Within the overlapping region, this script will fully correct target's gradient to match the reference. Outside this region, the target image can be corrected for the gradient detected along the length of the (approximately horizontal or vertical) join. This only corrects the horizontal or vertical component of the gradient.

         The mosaic tiles are first joined into rows or columns. These strips are then joined to create the final mosaic. As the rows (or columns) are built, one component of the relative gradient is corrected. When the strips are joined together, the other component gets fixed. It does not matter which component gets fixed first - the final result will be the same. This stategy is similar to \xref http://en.wikipedia.org/wiki/Bilinear_interpolation {Bilinear Interpolation}.
      }
      { Memory usage }{
        Mosaics can become very large. This script has therefore been designed to be as memory efficient as possible.
      }
    }
  }

  \subsection { Prerequisites } {
    \list{
      {Calibrate your images. Applying a good quality Flat is particularly important.}
      {For each mosaic frame, register and stack the images. Tip: If your images suffer from light pollution gradients, use Local Normalization to generate .xnml files. Image Integration can use these files to produce a better stack.}
      {If possible, remove the light pollution gradients from the stacked images (e.g. Dynamic Background Extraction).}
      {Use the script 'Image Analysis -> ImageSolver' to plate solve the mosaic tiles.}
      {Use the script 'Utilities -> MosaicByCoordinates' to register the mosaic tiles.}
      {Use the script 'Mosaic -> TrimMosaicTile' to remove soft or ragged edges. Even if your mosaic tiles had clean edges, the registration process creates a slightly soft edge. The images may require a few pixels to be erroded from them.}
      {Apply an STF (ScreenTransferFunction) to the images. This makes it easier to inspect results without having to leave the PhotometricMosaic script.}
    }
  }

  \subsection { Quick Start Guide } {
    \image images/PhotometricMosaicQuickStart.png
    \figure {
      \figtag \s {Photometry graph with an outlier star}
      \imageswap images/PhotometryGraphOutlier.png images/PhotometryGraphOutlierFix.png
      Use the \s {Photometry Graph} in the \s {Photometric Scale} section to display the graph. In this example, an obvious outlier can be seen at target star flux = 1.42e-1, reference star flux = 1.65e-1 (arbitary flux units). A left click on the outlier star was used to display its flux values in the graph's title bar. The mouse wheel zooms the graph. Use the 'Esc' key to return to the script dialog. In this example, the outlier star was excluded by setting \s {Outlier Removal} to one.
    }
    \list{
      {Select the reference and target views.}
      {In the \s {Photometric Scale} section, display the \s {Photometry Graph}. Check to see if any of the plotted points are obvious outliers. Close the graph (Esc key) to return to the script.}
      {If there were any outliers, use \s {Outlier Removal} to remove them.}
      {In the \s {Gradient Correction} section, display the \s {Gradient Graph}. Check that the curve is a good fit to the plotted points but doesn't follow the noise. Adjust \s {Smoothness} if necessary.}
      {In the \s {Create Mosaic} section, choose a combination mode.}
      {After pressing 'OK', close the script dialog and inspect the new mosaic. Use the 'Inspect_Join' preview to check the efficiency of the join.}
    }
    For a multi frame mosaic, first join the images into rows or columns. Then join the resulting strips into the final mosaic.
    \figure {
      \figtag \s {Geometry graph for mosaic modes Reference overlay and Target overlay.}
      \imageswap images/GradientGraphRefOverlay.png images/GradientGraphTgtOverlay.png
      Gradient graph showing the gradient along the join path (bold line) for a Reference overlay mosaic join. The mouse over image shows the gradient for a Target overlay. The Target overlay's join path is on the opposite side of the overlap region. The data points show a vertical scatter due to a gradient perpendicular to the join path. For a description of the thin line, see the \lref join_region_star_artifacts {Join Region: Avoiding bright star artifacts} section.

      Use \s {Gradient Graph} in the \s {Gradient Correction} section to display the graph. This example shows a complex gradient along a vertical join. Modify the \s {Smoothness} parameter to create a smooth curve that follows the gradient. Left click on a graph peak to display it's coordinates in the title bar. Then inspect the target image to determine the peak's cause. The mouse wheel zooms the graph. Use the 'Esc' key to return to the script dialog.
    }
  }

  \subsection { \label join_region_distored_corners Join Region: Avoiding distorted corners } {
    \image images/MilkyWayJoinRegionControl.png
    \figure[numbered:scutum_sagittarius_join_region] {
      \figtag \s {Scutum & Sagittarius Mosiac: Using a Join Region to avoid distorted corners}
      \imageswap[float,marginRight:1em] images/MilkyWayJoinRegion.png images/MilkyWayCorner.png
      Mosaic of Scutum (reference, top image) and Sagittarius (target, bottom image). A mask (created by \s {Join Mask} in the \s {Create Mosaic} section) has been applied to reveal the overlapping pixels.

      Mouse over to see a magnified image of the bottom left corner of the Overlap bounding box. These images were taken with a 50 mm camera lens, so the stars in the corners are heavily distorted. To avoid including these corner areas, a \s {Join Region} is created from Preview02. This has a similar affect to cropping the reference and target images. The reference image (Scutum) will appear to finish at the bottom of the Preview02. The target image (Sagittarius) will appear to start at the top of it.
    }
    A \s {Join Region} is created to control where the mosaic join occurs. The behavour depends on the mosaic combination mode. The following description uses the mosaic in figure \fignum scutum_sagittarius_join_region as an example.
    \list {
      {\s {Reference} The reference overlays the target, so the join is on the target side of the join region (bottom of Preview02).}
      {\s {Target} The target overlays the reference, so the join is on the reference side of the join region (top of Preview02).}
      {\s {Random} Inside the join region (Preview02), the pixels will be randomly chosen from the reference and target pixels.}
      {\s {Average} Inside the join region (Preview02), the pixels will be the average of the reference and target pixels.}
    }
    In all four cases, on the reference side of the the join region (above Preview02) the reference image will overlay the target. On the target side of the the join region (below Preview02) the target image will overlay the reference.

    Although creating a join region is similar to cropping the reference and target images, there are a some significant advantages to using a join region:
    \list {
      {The whole of the overlap area is used to determine the scale. This means the join region does not have to contain any stars. It can be as narrow as you wish.}
      {If the target image wraps around the edge of the reference (as it does in the example above) the whole of it will still be included in the mosaic, even if it is above or below the join region. The whole length of these side joins will still be seamlessly fitted to the reference image.}
    }
    When creating a join region to avoid low quality areas, the checkbox \s {Taper from join} should be left unchecked. It should only be checked if there are bright stars at the overlap bounding box's target side edge. This is described in the next section.
  }

  \subsection { \label join_region_star_artifacts Join Region: Avoiding bright star artifacts } {
    Bright stars often brighten the region around them due to scattered light or a halo from a narrow band filter. If the reference and target images were taken under different conditions, this can create a strong local gradient between the two images. In certain circumstances, this can cause problems at a mosaic join. An example of this type of problem is shown in Figure \fignum join_region_mosaic.
    \figure [numbered:join_region_mosaic] {
      \figtag \s {Narrow join with a problem star halo (from a Ha filter)}
      \imageselect[menupos:right] {
        images/horseHeadMosaicWithMask.png { (1) Mosaic (mask reveals overlap) }
        images/horseHeadMosaicShadow.png { (2) Reference overlay without Join Region }
        images/horseHeadMosaicNoShadow.png { (3) Target overlay with Join Region }
        images/horseHeadMosaicTgt.png { (4) Target showing Overlap & Join Region }
      }
      In this mosaic, the reference frame is above the target. The narrow overlap region contains a bright star, a prominant halo and scattered light.

      (1) A mask reveals the overlapping pixels.\n
      (2) Created using a Reference overlay. The join uses the whole of the overlap region. The join is visible through the halo, and a dark shadow is visible below the join.\n
      (3) Created using a Join Region that avoided the halo and most of the scattered light.\n
      (4) The target frame. The white preview is the overlap bounding box. The green preview specified the Join Region.
    }
    In Figure \fignum join_region_mosaic, the first image shows a mosaic with a mask that reveals where the overlapping pixels are. The path of the join follows the edge of these overlapping pixels. This path is not necessarily a stright line - it depends on the shape of the reference and target images. For a reference overlay mosaic, the join path is on the target side of these overlapping pixels. For a target overlay the path switches to the reference side. Hence by switching the mosaic mode from reference to target, we can switch were the primary join path is.

    The second image shows a reference overlay mosaic. The primary join path goes through the star's halo and has left a visible line in the image. A target overlay would have been a better choice. The primary join would then be on the other side of the overlapping pixels, and would not run through the halo. The join line would no longer be visible. However, there is a second problem that needs solving. Below the bright star is a dark shadow that slowly tapers away. Switching to a target overlay will not fix this. To solve it we first need to understand what causes this shadow.

    Within the overlapping pixel region there is sufficient data to fully correct the target image. Beyond this region, only an extrapolated correction can be applied. The user can choose between two strategies, but in both cases, the correction depends on the gradient along the target side of the overlapping pixels' bounding box. This is the secondary join path. It differs from the primary join path in several ways:
    \list {
      {It is a straight line, and follows a side of the overlapping pixels' bounding box.}
      {It is always on the target side of the bounding box. Switching between reference and target overlay will not affect it.}
    }
    The target image outside the overlap region can be corrected in one of two ways:
    \list {
      {The average offset along the secondary join line is applied to the rest of the target image. This is the default case, and prevents gradient corrections from propagating through the mosaic.}
      {An smooth gradient correction is created from the gradient along the secondary join line. This correction ignores the local variations and tries to follow the general trends. This correction is applied to the rest of the target image. This corrects one component of the relative gradient between the reference and target image.}
    }
    In either case, the correction on the target side of the secondary join will not completely match that within the overlapping region. To fix this, a taper is used to gradually transfer from a full correction to a partial one.

    If the secondary join line passes through a strong local gradient (e.g. a star halo) this can cause a dark area that slowly tapers out. One solution is to apply a very short taper. A better solution is to move where this secondary join line occurs.

    The position of the primary join can be set by specifying a \s {Join Region} (see the previous \lref join_region_distored_corners {section}). However, the Join Region's default behavior does not move the secondary join line. This is because for most situations, the target side of the overlap bounding box is the optimum position. If the reference and target image wrap around each other (see figure \figref scutum_sagittarius_join_region for an example of this), these side joins would not always be fully corrected if the secondary join is not at the end of the overlapping region.

    When a black shadow is visible, it can be worth moving the secondary join line to the target side of the Join Region. To do this, select the \s {Taper from join} option. This is a compromise because it might make side joins visible but it is usually worth trying before resorting to a short taper length.

    \figure [numbered:join_region_graph] {
      \figtag \s {Gradient graphs with and without Join Region}
      \imageselect[menupos:bottom] {
        images/horseHeadStarRef.png { (1) Reference overlay}
        images/horseHeadStarTgt.png { (2) Target overlay }
        images/horseHeadStarJoinRef.png { (3) Reference overlay with Join Region }
        images/horseHeadStarJoinTgt.png { (4) Target overlay with Join Region }
        images/horseHeadStarJoinTaperRef.png { (5) Reference overlay with Join Region, Taper from join }
        images/horseHeadStarJoinTaperTgt.png { (6) Target overlay with Join Region, Taper from join }
      }
      The bold curve is the gradient correction along the path of the primary join. The thinner darker line is the gradient along the path of the secondary join (sometimes hidden behind the bold curve).

      These graphs display the data from the mosaic shown in figure \figref join_region_mosaic. In this example, the options (5) and (6) will produce the best results. If the thickness of the Join Region rectangle is reduced to 1 pixel, the difference between options (5) and (6) would become negligable.
    }

    Figure \fignum join_region_graph shows gradient graphs for the two tiles from the 'Horse Head Mosiac' shown in figure \figref join_region_mosaic.

    The plotted points represent the background offset difference between the reference and target images. A gradient perpendicular to the join axis spreads these points vertically.

    The thick bright graph line indicates the gradient along the path of the primary join. The thin darker line shows the gradient along the path of the secondary join. These lines are described below for each of the example graphs:
    \definition {
      {(1) Reference overlay} {
        The path of the primary join is on the target side of the overlapping pixels. This path goes straight through the star's Ha filter halo, which has caused the prominent peak in the gradient graph. The graph correctly predicts that the join line is likely to be visible at this point.

        The path of the secondary join is on the target side of the overlap's bounding box. Both the reference and target images are alomost exactly 'square on' and have almost straight edges, so the path of the secondary join is very close to the path of the primary join. Hence the secondary join gradient line is hidden behind the primary line. The graph correctly predicts that a darker or brighter area is likely to occur in the taper region at this point.
      }
      {(2) Target overlay} {
        The path of the primary join is on the reference side of the overlapping pixels. This path avoids the star's Ha filter halo and is only affected by scattered light. The graph peak is drastically reduced indicating that the join line is far less likely to be visible at this point.

        The path of the secondary join is still on the target side of the overlap's bounding box. Its path still goes straight through the star's Ha filter halo, causing the prominent peak in the gradient graph. The graph correctly predicts that a darker or brighter area is likely to occur in the taper region at this point.
      }
      {(3) Reference overlay with Join Region} {
        The path of the primary join is on the target side of the Join Region. This path avoids the star's halo, so the graph peak is drastically reduced.

        The path of the secondary join is still on the target side of the overlap's bounding box. Its path still goes straight through the star's Ha filter halo, causing the prominent peak in the gradient graph. The graph correctly predicts that a darker or brighter area is likely to occur in the taper region at this point.
      }
      {(4) Target overlay with Join Region} {
        The path of the primary join is on the reference side of the Join Region. This path is slightly further away from the star than case (3), so the peak is slightly smaller. However, the peak is slightly higher than case (2). This is because the reference side of the Join Region is closer to the star than the reference side of the overlapping pixels.

        The path of the secondary join is still on the target side of the overlap's bounding box. Its path still goes straight through the star's Ha filter halo, causing the prominent peak in the gradient graph. The graph correctly predicts that a darker or brighter area is likely to occur in the taper region at this point.
      }
      {(5) Reference overlay with Join Region, Taper from join} {
        The path of the primary join is on the target side of the Join Region. This path avoids the star's halo, so the graph peak is drastically reduced.

        Due to the 'Taper from join' setting, the path of the secondary join is now on the target side of the Join Region. This avoids the star halo, so this graph peak is now also drastically reduced.
      }
      {(6) Target overlay with Join Region, Taper from join} {
        The path of the primary join is on the reference side of the Join Region. This path avoids the star's halo, so the graph peak is drastically reduced. The reference side of the Join Region is slightly further from the star than the target side, so the peak is slightly smaller than in case (5).

        Due to the 'Taper from join' setting, the path of the secondary join is now on the target side of the Join Region. This avoids the star halo, so this graph peak is now also drastically reduced. This peak is exactly the same size as in case (5).
      }
    }
    In these examples, case (6) is the best solution. However, the optimum solution would have been to move the Join Region so that it started at the reference side of the overlap bounding box. The reference side of the Join Region would then be as far from the star as possible. If the Join Region is made very thin (OK for Reference overlay or Target overlay) this would make cases (5) and (6) almost identical. The user would then be free to choose Reference or Target overlay, depending on which has the best quality. There is no limit to how thin the Join Region can be. It does not need to contain any stars - the whole of the overlapping region is always used to photometrically determine the scale.

    The graph auto scales to the data range, so check the scale on the vertical axis to determine how significant the graph peaks are. To locate the star that's causing the peak, read the coordinate along the join from the graph's horizontal axis. Alternatively, a left mouse click on the peak will display the mouse coordinates (join coordinate, offset) in the graph title bar. If there is no bright star at the coordinate, a graph peak may be due to a scale error. To learn more, read the next section.
  }

  \subsection { Detecting a Scale Error with the Gradient Graph } {

    Gradient graphs curves often contain significant peaks. This is usually due to a scattered light around a star, or a star halo. If the two images were taken in different conditions, this can cause a local difference between the two images in the vicinity of the star. This is a real difference and not due to a scale error. The solution is to specify a join region that avoid these artifacts. See the previous section.

    However, if a gradient graph has a peak that corresponds to a brighter area of the image - e.g. a brighter part of a nebula or galaxy, this might indicate a scale error. The following example illustrates this situation.

    (To display a gradient graph, use \s {Gradient Graph} in the \s {Gradient Correction} section.)
    \figure {
      \figtag \s {Before and after scale correction}
      \imageswap images/GradientGraphScaleErr.png images/GradientGraphScaleFix.png
      The graph shows a significant peak at x-coordinate 1,921 (displayed in the title bar by left clicking the peak). By inspecting the join region within mosaic image (see the 'Inspect_Join' preview in the image below), we can see that there are no bright stars at this coordinate, so the peak cannot be due to scattered light or a star halo. Instead, the peak corresponds to a brightening of the nebula. Whenever this occurs, it indicates a possible error in the applied scale factor.

      The mouse over image shows the graph after the scale has been corrected. There is a very slight over correction, but it is now very close. The graph now reveals a slight gradient across the image.

      \image images/GradientGraphScaleHorseHead.png
    }

    The scale was corrected by reject a stars from the photometry. However, it was only clear which star needed to be rejected after zooming in on the Photometry Graph. See below:

    \figure {
        \figtag \s {Scale error}
        \imageselect[menupos:right] {
          images/GradientGraphScaleGraph.png      { Initial graph }
          images/GradientGraphScaleGraphZoom.png   { Initial graph 27:1}
          images/GradientGraphScaleGraphZoomFix.png    { Brightest star removed }
        }
        At first sight, the 'Initial graph' image looks good. However, after using the mouse wheel to zoom in (see 'Initial graph 27:1') it can be seen that the best fit line is not a good fit to the fainter stars. The brightest star should have been an outlier, but it has stongly influenced the best fit line due to its distance from the origin. Since the bright star is very close to the incorrectly fitted line, it cannot be rejected by using the \s {Outlier Removal} control. However, it can be rejected by reducing the \s {Linear Range}. In this case it was reduced to 0.1 (see 'Brightest star removed').
      }
         It is clear that even a very small scale error can have a significant effect on the offset and gradient that will be removed. However, the gradient graph's vertical axis reveals that, at least in this case, the offset differences were very small and would not have caused a visable difference.

      \figure {
      \figtag \s {Brightest star - underestimated size}
      \image images/GradientGraphScaleHorseHeadStar.png
      By using \s {Photometry Stars} the reason for the brightest star's photometry error becomes clear. The size of the star has been underestimated, and some of the star's flux has contributed to the background sky measurement. There are very few stars within the dark nebula, which explains why a single star was able to have a strong effect.
    }
  }


  \subsection { Gradient Component Correction } {
    \image images/GradientCorrectionAndComponentCorrection.png
    Inside the overlap bounding box, the relative gradient between the reference and target image is fully corrected. Outside this region, any gradient correction has to be extrapolated from the available data within the overlapping region.

    The controls shown above provide Gradient Correction and Gradient Component Correction. Gradient Correction is used to fully correct the target image within the overlap's bounding box. Gradient Component Correction, if selected, is used to partially correct the target gradient outside the overlap's bounding box.

    Gradient Component Correction is designed to ignore any detected gradient perpendicular to the join. Typically the join is too thin for the data to be a good representative sample of the perpendicular gradient. Hence only the gradient component along the join is used to correct the target image outside the overlap bounding box.

    If the mosaic is made up of more than one row or column, the other gradient component can be corrected when these strips are joined. This stategy is similar to \xref http://en.wikipedia.org/wiki/Bilinear_interpolation {Bilinear Interpolation}. It does not matter which component is corrected first, the end result will be the same.

    When using Gradient Component Correction, any gradient present within the reference image will get propagated across the mosaic. It is therefore important to remove this gradient once the mosaic is finished. For example by applying Dynamic Background Extraction (DBE).

    \figure {
      \figtag \s {Mosaic with and without Gradient Component Correction}
      \imageselect[menupos:right] {
        images/M33_reference.png      { Reference }
        images/M33_target.png   { Target }
        images/M33_mosaic.png    { Mosaic (default options) }
        images/M33_mosaic_component.png    { Mosaic with Gradient Component Correction }
      }
      This example compares the mosaics created with and without Gradient Component Correction. The target image contains a strong horizontal gradient. In both cases, the overlapping region gets fully corrected.

      The mosaic created with default options shows the gradient corrections tapering away outside the overlapping region. This prevents gradient corrections propagating across the mosaic. In this case, since the reference frame has less gradient than the target frame, this is not the best strategy.

      The Mosaic created with Gradient Component Correction uses the gradient component measured along the length of the target side of the overlap's bounding box to correct the rest of the target image. In this example this is the horizontal component, and produces a good result.
    }
    \figure {
      \figtag \s {Smooth Gradient Correction}
      \imageswap images/GradientPropagateGraph.png images/GradientPropagateGraph2.png
      This graph shows a smooth curve that follows the general gradient trend and is therefore suitable for Gradient Component Correction. It is important that this propagated gradient correction does not include local variations. It is unlikely that they will match the gradient at the other side of the target frame!

      The mouseover graph shows a curve that follows the gradient variations too closely. This high level of correction should only be applied in the Gradient Correction section, which is limitted to the overlapping area.
    }
  }

}

\usage {

\image images/PhotometricMosaicAll.png

  \subsection { Reference & Target Views } {
    \definition {
      { Reference view } {
        The target image will be matched to this reference image. The reference image is not modified.
      }
      { Target view } {
        This image is cloned, then multiplied by the photometrically determined scale factor, and finally the gradient is calculated and subtracted.

        This action is invoked every time the user selects 'OK', irrespective of whether the \s {Create Mosaic} check box is selected.
      }
    }
  }

  \subsection { Star Detection } {
    \image images/StarDetection.png
    \definition {
      { Star detection } {
        Logarithm of the star detection sensitivity. Increase this value to detect less stars. You usually don't need to modify this parameter.

        Subsets of these detected stars are used for photometry, rejecting samples that contain stars, and to create the mosaic star mask.

        The detected stars are cached until either the PhotometricMosaic dialog is closed or a modification invalidates the cache.

You can use the Detected Stars option to see which stars were detected.
      }
      { Detected stars } {
        \image images/DetectedStars.png
        Displays all the stars detected in the reference and target images in two separate windows. The color of the squares indicate the color channel the star was detected in. The colors add, so white indicates the star was detected in red, green and blue.

        The detected stars are cached until either the Photometric Mosaic dialog is closed or a modification invalidates the cache.
      }
    }
  }

  \subsection { Photometric Star Search } {
    \image images/PhotometricStarSearch.png
    \definition {
      { Star flux tolerance } {
        Star flux tolerance is used to prevent invalid target to reference " +
            "star matches. Smaller values reject more matches.

        Star matches are rejected if the difference in star flux is larger than expected. The algorithm first calculates the average scale difference, and then rejects matches if their brightness ratio is greater than
          \e {(expected ratio * tolerance)}
        or smaller than
          \e {(expected ratio / tolerance)}

        \list{
          {1.0 implies the star flux ratio must exactly match the expected ratio.}
          {2.0 implies that the ratio can be double or half the expected ratio.}
        }
        You usually don't need to modify this parameter.
      }
      { Star Search Radius } {
        Search radius is used to match the reference and target stars.

        Larger values find more photometric stars but at the risk of matching the wrong star or even matching noise. You usually don't need to modify this parameter.
      }
    }
  }

  \subsection { Photometric Scale } {
    \image images/PhotometricScale.png
    \definition {
      {Limit stars}{
        Specifies the percentage of the brightest detected stars that will be used to find photometric stars.

        100\% implies that all detected stars are used, up to a maximum of 1000.

        90\% implies that the faintest 10\% of detected stars are rejected.

        0\% implies no stars will be used. The scale will default to one.


        Including too many very faint stars can reduce the accuracy of the calculated scale.
      }
      {Linear range}{
        Restricts the stars used for photometry to those that have a peak pixel value less than the specified value. Use this to reject stars that are outside the camera's linear response range.

        After examining the Photometry Graph, if the brightest plotted stars looks suspect, they can be removed by reducing the \s {Linear range}. This can sometimes be easer than using Outlier Removal.
      }
      {Outlier removal}{
        The photometric measurement of some stars can be suspect. For example, a star's size may be underestimated causing some of its flux to contribute to the background measurement. This control determines the number of outlier stars to remove. This can improve accuracy, but don't over do it!

Use the Photometry graph button to see the photometry data points and their best fit line.
      }
      {Photometry graph}{
        \image images/PhotometryGraphColor.png
        For each star detected within the overlap region, provided the star meets the photometry criteria, the star's reference flux is plotted against its target flux. Color (red, green and blue) is used to represent the data for each color channel. The plotted lines indicate the best fit lines (least squares fit) that go through the origin. The gradient of these lines gives the required scale factors.

        The graph provides user interaction. Use the mouse wheel to zoom in or out, the left mouse button to display the current (x,y) coordinate and the right mouse button to save the graph as a PixInsight view window. The zoom level and (x,y) coordinate is displayed in the title bar. To return to the script, use the 'Esc' key or the title bar window close button.

If the graph is saved as a PixInsight view, useful data is saved to the FITS header.
        \image images/PhotometryFitsHeader.png
      }
      {Photometry stars}{
        \image images/PhotometryStars.png
        Displays the stars that met the criteria for photometry. These stars were within the specified \s {Linear range} and were found in both target and reference images and were not rejected by \s {Outlier removal}. The color represents the color channel. Hence a white square indicates the star was found in the red, green and blue channels.

        Useful data is also saved to the FITS header, including the position of the star that has the largest error.
      }
    }
  }

  \subsection { Join Region } {
    \image images/JoinRegion.png
    Limits the join region to a subset of the overlap area. If unspecified, it defaults to the whole of the overlap area.

    The join region determines the size and position of the join between the two images. The rectangle's long axis should align with the join and should ideally avoid low quality regions such as image corners. For all \s {Join Direction} modes except for \s {Insert}, the long axis of the join region is updated to start and finish at the overlap's bounding box. The ideal size and position of the Join Region rectangle depends on the Mosaic overlay mode:
    \list{
      {Reference overlay: The edge closest to the target image determines the primary join line. This line should avoids bright stars.}
      {Target overlay: The edge closest to the reference image determines the primary join line. This line should avoids bright stars.}
      {Random: The rectangle should be thick enough to blend the two sides of the join.}
      {Average: The join region determines the area that will benefit from the enhanced signal to noise ratio.}
    }
    It is not necessary for the join region to contain any stars. The whole of the overlap area is always used to determine the photometric scale and the background gradient.

    Inside the join region, the behavior depends on the mosaic combination mode. The behavior outside the region (for all modes except \s {Insert}):"
    \list{
      {Reference side of join region: Reference overlay}
      {Target side of join region: Target overlay}
    }

    \definition {
      {Taper from join}{
        Moves the taper zone from the target side of the overlap bounding box to the target side of  the join region.

        The target image's offset and gradient are fully corrected within the join region, but outside the overlap bounding box the gradient can only be partially corrected. A taper is applied to blend these two regions together.

        The taper is usually applied at the target side boundary of the overlap bounding box. If this option is selected, the taper is applied from the target side of the 'Join Region' instead.

        You should only select this option if there is a bright star on the target side boundary of the overlap bounding box that is causing a brightening or darkening in the taper zone on the target side of the star.

        Inspect the 'Gradient graph' (Overlap Area Gradient section) to check for peaks in the gradient curve that follows the secondary join's path (the thin darker line).

        Caution: if the images wrap around each other at the sides, selecting this option may affect the correction applied to these side joins.
      }

      {Get area from preview}{
        This combo box is used to initialize the join region from a preview.
        \image images/JoinRegionPreview.png
        The image above shows a target frame. Perview01 has been created to specify the join region. Providing the \s {Join Direction} is not set to \s {Insert}, the created join region will be extended along its length to the overlap's bounding box.

        The preview has been positioned so that it avoids the corners of both the target and reference images.

        I have used a mask to illustrate where the overlapping pixels are. The mask was created by \s {Join Mask} in the \s {Create Mosaic} section. It is transparent for all overlapping pixels.
      }
    }
  }

  \subsection { Gradient Sample Generation } {
    \image images/GradientSampleGeneration.png
    The overlapping region is divided up into a grid of sample squares. A sample's value is the median of the pixels it contains. These sample values are used to calculate the background offset and gradient. Using samples ensures that the offset and gradient calculation is less affected by bright stars with differing profiles.

    Samples are rejected if they contain one or more zero pixels in either image or if they contain a star bright enough to be included in the '\s {Limit stars \%}' list.

    The samples are used to create a surface spline that models the background gradient. The sample size and the number of surviving samples determines the maximum theoretical resolution of the surface spline. However, small samples will suffer from more noise.

    This section controls how the samples are generated.
    \definition {
        {Limit stars \%}{
          Specifies the percentage of the brightest detected stars that will be used to reject samples. 0\% implies that no samples are rejected due to stars. This is OK provided that no star takes up more than half of a sample's area. 100\% implies that all detected stars are used to reject samples. Samples that contain bright stars are rejected for two reasons:
          \list {
            {Bright pixels are more affected by any errors in the calculated scale.}
            {Bright stars can have significantly different profiles between the reference and target images. This can effect how many of the pixels illuminated by a star fall into a neighboring sample.}
          }
          It is only necessary to reject bright stars. This script uses the median value from each sample, so any star that takes up less than half the sample area will have little effect. It is more important to include most of the samples than to reject faint stars.
        }
        {Sample size}{
          Specifies the size of the sample squares. Ideally, the samples should be about 1.5x the size of the largest star. Use the \s {Sample grid} button to visualize the grid of samples.
      }
      {Sample grid}{
        \image images/Samples.png
        Displays the grid of samples that will be used to calculate the background offset and gradient.

        Samples are rejected if they contain one or more zero pixels in either image or if they contain a star included in the 'Limit stars \%' list. The surviving samples are drawn as squares. The stars used to reject samples are indicated by circles.
      }
      {Max samples}{
        Limits the number of samples used to create the surface spline. If the number of samples exceed this limit, they are combined (binned) to create super samples. This is done to improve performance. The time required to initialize the surface spline approximately doubles every 1300 samples.

        Increase it if the overlap area is very large. A larger number of samples increases the theoretical maximum resolution of the surface spline. However, small unbinned samples are noiser and require more smoothing. The default value is usually a good compromise.

        Use the 'Binned grid' button to visualize the binned samples.
      }
      {Binned grid}{
        \figure {
          \figtag \s {Binned sample grid, sample grid}
          \imageswap images/SamplesBinned.png images/SamplesNotBinned.png
          The image shows a 3x3 binned sample grid. Mouseover to see the sample grid squares that the binned grid was created from.
        }
        Displays the binned samples that will be used to calculate the background offset and gradient. Samples are binned to improve performance if the number of samples exceeds the 'Max samples' limit.

        The area of each binned sample represents the number of samples it was created from. Each binned sample's center is calculated from the center of mass of the samples it was created from. The drawn boxes no longer indicate exactly which of the pixels are being used. To see which of the unbinned samples were rejected due to stars or black pixels, it is necessary to use 'Sample grid' instead.
      }
      {Join direction}{
        Determines the orientation of the line of intersection. This determines how the background offset is corrected outside of the overlap area. You should usually use \s {Auto} while creating a mosaic, or \s {Insert} to replace a small region in the middle of an existing mosaic.

        \s {Auto}: The join direction is determined by the join region rectangle's longest dimension. If the \s {Join Region} has not been specified, the overlap's bounding box is used instead.

        \s {Horizontal}: Sets the join direction to horizontal. The target's background offset is corrected in the region above and below the join. On the target side of the overlap, the offset is tapered from fully corrected at the overlap boundary, down to either the average offset correction or the 'Extrapolated gradient' correction (if specified).

        \s {Vertical}: Sets the join direction to vertical. The target's background offset is corrected in the region to the left and right of the join. On the target side of the overlap, the offset is tapered from fully corrected at the overlap boundary, down to either the average offset correction or the 'Extrapolated gradient' correction (if specified).

        \s {Insert}: Pixels from the target image are limited to the Join Region or overlap area. This can be used to fix a small area of the mosaic or to add a high res image to a wider mosaic. \s {Insert} only supports the \s {Target overlay} and \s {Average} mosaic combination modes.
      }
    }
  }

  \subsection { Overlap Area Gradient } {
    \image images/Gradient.png
    This section determines how the target pixels within the whole of the overlap region are corrected, and to specifiy the size of the transition region between the fully corrected overlap region and the rest of the target image.

    For efficiency, only the target pixels that will become visible get corrected. For example, if the selected mosaic overlay mode is Reference Overlay, if a reference pixel exists, the corresponding target pixel can be ignored.

    \definition {
      {Smoothness}{
        This determines how closely the correction follows the sample pair data points. The smoothness value is logarithmic. Smaller values apply less smoothing. The aim is to correct both the gradient trends and the local variations, such as the diffuse light around bright stars, but with enough smoothing to avoid following noise.

        Use the \s {Gradient Graph} to determine the optimum smoothness.

        The full correction is applied across the whole of the overlap's bounding box.
      }
      {Taper length}{
        The length of the taper that's applied between the fully corrected overlap region and the rest of the target image to provide a smooth transition. In most cases, a long taper usually produces the best result, but the taper should finish before the the end of the target image. However, if there is a spike in the local variation along the join, (e.g. a star halo) a short taper may be necessary.

        The scale factor is applied to the whole of the target image, but the gradient correction is dependent on the available data. The overlap region has sufficient data to allow full gradient correction. However, there is no data outside the overlap bounding box, so the rest of the target image relies on an extrapolated correction.

        In the default case (no \s {Propagated Gradient Correction}) the average offset between the two images along target side edge of the overlap's bounding box is applied to the rest of the target image.

        If \s {Propagated Gradient Correction} is specified, the rest of the target image is corrected with the component of the gradient measured along the target side edge of the overlap's bounding box. Typically a smoother correction is specified for this propagated correction, following the general gradient trend and ignoring the local variations.

        In both cases, there will be an imperfect match between the fully corrected overlap region, and the extrapolated correction. The taper is used to create a smooth transition between these two regions.
      }
      {Gradient graph}{
        \image images/GradientGraphTgtOverlay.png

        The vertical axis represents the difference between the two images, the horizontal axis the join's X-Coordinate (horizontal join) or Y-Coordinate (vertical join).

        The plotted dots represent the difference between each paired target and reference sample within the whole of the overlap bounding box area. These points are typically scattered vertically. This is partly due to gradients perpendicular to the join, and partly due to noise.

        A bold curve is drawn to represent the gradient correction at the join. This gradient correction is calculated from the offset differences along the join. The path of the join line might not be straight - it depends on the shape of the reference and target images.

        A thin line is drawn to show the gradient correction at the opposite side of the join region, and the thin middle line indicates the gradient half way between. If the combine mode is average or random, all three lines are relevant and are then all drawn as bold.

        The graphs produced for color images use red, green and blue dots and lines for each channel. The colors add together. For example: red, green and blue add up to white.
      }
    }
  }

  \subsection { Extrapolated Gradient } {
    \image images/PropagatedGradientCorrection.png
    This section determines how the gradient correction is applied to the target side of the overlap's bounding box. It has no affect within the overlap region. Consider using it if the reference image has less gradient than the target image. In these cases it can partially correct the horizontal and vertical components of the relative gradient between the reference and target image. This is done in two stages:

        One component is corrected when tiles are joined into horizontal or vertical strips. The other component is corrected when these strips are joined.

        Since this gradient correction is propagated across the mosaic, the correction should be a very smooth curve that follows the general trend. It should not attempt to correct the local variations which are unlikely to be valid at the opposite side of the image. The local variations are corrected by \s {Gradient Correction} instead.
        The reference image's gradient will be propagated across the mosaic, so consider using DBE as a final correction once the mosaic is complete.
      \definition {
      {Smoothness}{
        This determines how closely the correction follows the sample pair data points. The smoothness value is logarithmic. Smaller values apply less smoothing. The aim is to correct the gradient trend but to ignore the local variations, such as the diffuse light around bright stars.

        Use the \s {Gradient Graph} to determine the optimum smoothness.
      }
      {Gradient graph}{
        \image images/GradientPropagateGraph.png
        The vertical axis represents the difference between the two images, the horizontal axis the join's X-Coordinate (horizontal join) or Y-Coordinate (vertical join).

            The plotted dots represent the difference between each paired target and reference samples within the whole of the overlap bounding box area. These points are typically scattered vertically. This is partly due to gradients perpendicular to the join, and partly due to noise.

            The propagated correction is calculated from the offset differences along the target side of the overlap's bounding box. A bold curve for each color channel is drawn on the graph to show this correction. A thin line is drawn to show the offset curve at the opposite side of the overlap bounding box.

            The graphs produced for color images use red, green and blue dots and lines for each channel. The colors add together. For example: red, green and blue add up to white.
      }
    }
  }

  \subsection { Mosaic Star Mask } {
    \image images/MosaicMaskSection.png
    A mosaic join created with the \s {Random} combination mode is highly affective, but often produces speckled star edges around bright stars. This section creates a mask that can be used to fix this.

    \image images/StarSpeckleFix.png
    The image above shows a mosaic created with the Random combien mode from the reference 'F04n9_r' and target 'F05n9_r' images. A mask created from this section has been applied. To fix the speckle artifacts around the bright stars, the PixelMath expression needs to be either the reference or target image ('F04n9_r' or 'F05n9_r'). It is worth choosing the image with the sharpest stars.

    At the edge of the overlapping region, the star mask holes get abruptly terminated. If this was not done, the PixelMath fix would create black holes in the mosaic image where the overlap finished.
    \definition {
      {Limit stars \%}{
        Specifies the percentage of the brightest detected stars that will be used to create the star mask.

0\% will produce a solid mask with no stars.

100\% will produce a mask that includes all detected stars.

Small faint stars are usually free of artifacts, so normally only a small percentage of the detected stars need to be used.
      }
      {Multiply star radius}{
        Sets the mask star radius to a multiple of the star's radius. This increases the size for large stars more than small ones.
      }
      {Add to star radius}{
        Used to increases or decreases the radius of all mask stars. This is applied after the Multiply Star Radius.
      }
      {Create mask}{
        Creates a star mask that reveals bright stars.
      }
      {Stars}{
        Displays the stars used to create the mosaic star mask.
      }
    }
  }

  \subsection { Mosaic } {
    \image images/MosaicSection.png
    \definition {
      {Create Mosaic}{
        If selected, the reference and target frames are combined and displayed in a window named: 'Mosaic'.
If this option is not selected, the corrections will be applied to a copy of the target image, but the mosaic will not be created.
      }
      {Combination Mode}{
        \list {
          {Reference: The reference image pixels are drawn on top of the target image.}
          {Target: The target image pixels are drawn on top of the reference image.}
          {Random: Over the join region, pixels are randomly chosen from the reference and target images. This mode is particularly affective at hiding the join, but if the star profiles in the reference and target images don't match, this can lead to speckled pixels around the stars. These speckled star artifacts can be fixed by using PixelMath to apply either the reference or target image to the mosaic through a mask that only reveals the bright stars. The \s {Mosaic Star Mask} section has been provided for this purpose.}
          {Average: Over the join region, pixels are set to the average of the reference and target pixels. This mode has the advantage of increasing the signal to noise ratio over the join, but this can also make the join more visible.}
        }
      }
      {Join mask}{
        Create a mask of the mosaic join. This mask indicates the pixels used to create the mosaic join.

        If a \s {Join Region} has not been defined, the join area is simply the overlapping pixels. However, if it has been specified, the join extends along the full length of the join but it is otherwise limited to the join region.
      }
    }
  }


}

\relatedscripts {
  ImageSolver, ManualImageSolver, MosaicByCoordinates
}

\relatedtools {

}

\make
